name: Build Flet Android APK (Improved)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install Android SDK components
      run: |
        echo "Installing Android SDK components..."
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platform-tools" "platforms;android-33" "platforms;android-34" "build-tools;33.0.0" "build-tools;34.0.0"
        echo "Android SDK setup complete"
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "PATH: $PATH"

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet[build-tools]
        if [ -f requirements.txt ]; then 
          echo "Installing from requirements.txt..."
          pip install -r requirements.txt
        fi
        echo "Installed packages:"
        pip list

    - name: Verify project structure
      run: |
        echo "Project structure:"
        find . -type f -name "*.py" | head -20
        echo "Main files:"
        ls -la *.py *.toml *.txt 2>/dev/null || true
        if [ -f "main.py" ]; then
          echo "main.py found ✓"
        else
          echo "❌ main.py not found!"
          exit 1
        fi
        if [ -f "pyproject.toml" ]; then
          echo "pyproject.toml found ✓"
          echo "pyproject.toml contents:"
          cat pyproject.toml
        else
          echo "❌ pyproject.toml not found!"
          exit 1
        fi

    - name: Test Flet installation
      run: |
        python -c "import flet; print(f'Flet version: {flet.__version__}')"
        flet --help

    - name: Build Android APK
      run: |
        echo "Starting APK build..."
        echo "Working directory: $(pwd)"
        echo "Environment variables:"
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "JAVA_HOME: $JAVA_HOME"
        
        # Build with maximum verbosity
        flet build apk --verbose 2>&1 | tee build.log
        
        echo "Build process completed. Checking results..."
        echo "Current directory contents:"
        ls -la
        
        if [ -d "dist" ]; then
          echo "✓ Dist folder found"
          echo "Dist folder contents:"
          ls -la dist/
          if ls dist/*.apk 1> /dev/null 2>&1; then
            echo "✓ APK files found:"
            ls -la dist/*.apk
          else
            echo "❌ No APK files in dist folder"
            echo "Full dist contents:"
            find dist -type f
          fi
        else
          echo "❌ No dist folder found"
          echo "Looking for APK files anywhere:"
          find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found anywhere"
        fi
        
        # Check for build artifacts
        if [ -d ".flet" ]; then
          echo "Flet build folder contents:"
          ls -la .flet/
        fi
      env:
        ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
        JAVA_HOME: ${{ env.JAVA_HOME }}

    - name: Upload APK (if found)
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: ExpenseTracker-APK
        path: |
          dist/*.apk
          **/*.apk
        if-no-files-found: ignore
        retention-days: 30

    - name: Upload build logs and debug info
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-debug-info
        path: |
          build.log
          .flet/
          dist/
        if-no-files-found: ignore
        retention-days: 7

    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/') && hashFiles('dist/*.apk') != ''
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}